create or replace  temporary view DATA_VAULT_DEMO_DEV.dbt_vault.hub_account__dbt_tmp
  
   as (
    -- Generated by AutomateDV (formerly known as dbtvault)

    

WITH row_rank_1 AS (
    SELECT rr.ACCOUNT_PK_HASH, rr.ACCOUNT_ID, rr.LOAD_DATETIME, rr.RECORD_SOURCE,
           ROW_NUMBER() OVER(
               PARTITION BY rr.ACCOUNT_PK_HASH
               ORDER BY rr.LOAD_DATETIME
           ) AS row_number
    FROM DATA_VAULT_DEMO_DEV.dbt_vault.v_salesforce_accounts AS rr
    WHERE rr.ACCOUNT_PK_HASH IS NOT NULL
    QUALIFY row_number = 1
),

row_rank_2 AS (
    SELECT rr.ACCOUNT_PK_HASH, rr.ACCOUNT_ID, rr.LOAD_DATETIME, rr.RECORD_SOURCE,
           ROW_NUMBER() OVER(
               PARTITION BY rr.ACCOUNT_PK_HASH
               ORDER BY rr.LOAD_DATETIME
           ) AS row_number
    FROM DATA_VAULT_DEMO_DEV.dbt_vault.v_salesforce_accounts AS rr
    WHERE rr.ACCOUNT_PK_HASH IS NOT NULL
    QUALIFY row_number = 1
),

stage_union AS (
    SELECT * FROM row_rank_1
    UNION ALL
    SELECT * FROM row_rank_2
),

row_rank_union AS (
    SELECT ru.*,
           ROW_NUMBER() OVER(
               PARTITION BY ru.ACCOUNT_PK_HASH
               ORDER BY ru.LOAD_DATETIME, ru.RECORD_SOURCE ASC
           ) AS row_rank_number
    FROM stage_union AS ru
    WHERE ru.ACCOUNT_PK_HASH IS NOT NULL
    QUALIFY row_rank_number = 1
),

records_to_insert AS (
    SELECT a.ACCOUNT_PK_HASH, a.ACCOUNT_ID, a.LOAD_DATETIME, a.RECORD_SOURCE
    FROM row_rank_union AS a
    LEFT JOIN DATA_VAULT_DEMO_DEV.dbt_vault.hub_account AS d
    ON a.ACCOUNT_PK_HASH = d.ACCOUNT_PK_HASH
    WHERE d.ACCOUNT_PK_HASH IS NULL
)

SELECT * FROM records_to_insert
  );